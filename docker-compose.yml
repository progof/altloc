networks:
  dev:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
    depends_on:
      - backend
      - frontend
    networks:
      - dev

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
      args:
        VITE_PUBLIC_CDN_URL: ${PUBLIC_CDN_URL}
    ports:
      - 80:80
    networks:
      - dev

  backend:
    restart: "always"
    build:
      context: .
      dockerfile: Dockerfile
      target: backend   
    ports:
      - 4000:4000
    environment:
      - DB_CONNECTION_URI=${DB_CONNECTION_URI}
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET=${MINIO_BUCKET}
      - MINIO_REGION=${MINIO_REGION}
      - APP_EMAIL_ADDRESS=${APP_EMAIL_ADDRESS}
      - APP_EMAIL_PASSWORD=${APP_EMAIL_PASSWORD}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - CLIENT_URL=http://localhost:3000
    networks:
      - dev

  postgres:
    image: postgis/postgis:14-3.4-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    networks:
      - dev

  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9090"
    restart: "always"
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    networks:
      - dev

volumes:
  postgres-data:
  minio-data: